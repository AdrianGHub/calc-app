{"version":3,"sources":["components/Display/Display.module.scss","components/Button/Button.module.scss","containers/MainKeyboard/MainKeyboard.module.scss","containers/MemoryContainer/MemoryContainer.module.scss","App.module.scss","components/Display/Display.tsx","components/Button/Button.tsx","containers/MainKeyboard/MainKeyboard.tsx","containers/MemoryContainer/MemoryContainer.tsx","stores/CalculatorStore.ts","App.tsx","stores/getRootStores.ts","index.tsx"],"names":["module","exports","style","bemCssModules","DisplayStyles","DisplayConsumer","inject","observer","calculatorStore","displayRef","useRef","useEffect","current","displayElement","className","ref","BemCssModules","ButtonStyles","Button","isEqual","isLighter","isMemeory","onClick","content","modifiers","event","MainKeyboardStyles","MainKeyboardConsumer","percent","cancel","clear","undo","oneXth","power","square","division","concatenateNumber","multiplication","subtraction","addition","invertNumber","addComma","equal","MemoryContainerStyles","MemoryContainerConsumer","memoryClear","memoryRead","memoryAdd","memoryMinus","memorySet","CalculatorStore","memoryValue","displayValue","previousValue","selectedFunction","isFunctionDone","repeatedValue","wasEqualClicked","wasSpecialFunctionClicked","display","target","textContent","changeDisplayValue","toString","Number","hasRepeatedValue","callPreviousFunctionAndChangeIt","handleSecondClickOnFunction","getValuesToCalculations","newValue","setRepeatedValue","afterNewValueCalculation","undefined","slice","valueToDisplay","Math","abs","includes","callSpecialFunction","sqrt","value","this","previousFunction","hasRepetedValue","isNoValue","element","setSettings","modifierDelimiter","AppStyles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a1c5c71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__2--2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Qy52\",\"Button--is-lighter\":\"Button_Button--is-lighter__2JZJ5\",\"Button--is-memory\":\"Button_Button--is-memory__uCmJ5\",\"Button--is-equal\":\"Button_Button--is-equal__kAbBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainKeyboard\":\"MainKeyboard_MainKeyboard__3tDkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemoryContainer\":\"MemoryContainer_MemoryContainer__1AzVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Riae\"};","import React, { useRef, useEffect } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { default as bemCssModules } from 'bem-css-modules';\r\nimport { CalculatorStore } from \"../../stores/CalculatorStore\";\r\nimport { default as DisplayStyles } from './Display.module.scss';\r\n\r\ninterface DisplayProps {\r\n    calculatorStore?: CalculatorStore;\r\n}\r\n\r\n\r\nconst style = bemCssModules(DisplayStyles);\r\n\r\nconst Display: React.FC<DisplayProps> = ({calculatorStore}) => {\r\n\r\n    const displayRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            if(displayRef.current && calculatorStore) {\r\n                calculatorStore.displayElement = displayRef.current;\r\n            }\r\n        },\r\n        [displayRef, calculatorStore]\r\n    )\r\n\r\n    return (\r\n        <div \r\n            className={style()}\r\n            ref={displayRef}\r\n        >    \r\n            0\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DisplayConsumer = inject('calculatorStore')(observer(Display));\r\n\r\nexport { DisplayConsumer as Display };","import React from 'react';\r\nimport { default as BemCssModules} from 'bem-css-modules';\r\nimport { default as ButtonStyles} from './Button.module.scss';\r\n\r\ntype TCalculatorFunction = () => void;\r\ntype TConcatenateFunction = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\ninterface ButtonProps {\r\n    content: string;\r\n    isEqual?: boolean;\r\n    isLighter?: boolean;\r\n    isMemeory?: boolean;\r\n    onClick: TCalculatorFunction | TConcatenateFunction;\r\n}\r\n\r\nconst style = BemCssModules(ButtonStyles);\r\n\r\n\r\nexport const Button: React.FC<ButtonProps> = ({isEqual, isLighter, isMemeory, onClick, content}) => {\r\n    const modifiers = {\r\n        'is-equal': isEqual,\r\n        'is-lighter': isLighter,\r\n        'is-memory': isMemeory\r\n    }\r\n\r\n    const onClickHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n        onClick(event);\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className={style(modifiers)}\r\n            onClick={onClickHandler}\r\n        >\r\n            {content}\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { default as BemCssModules } from 'bem-css-modules';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { CalculatorStore } from \"../../stores/CalculatorStore\";\r\nimport { default as MainKeyboardStyles } from './MainKeyboard.module.scss';\r\n\r\ninterface MainKeyboardProps {\r\n    calculatorStore?: CalculatorStore;\r\n}\r\n\r\nconst style = BemCssModules(MainKeyboardStyles);\r\n\r\nconst MainKeyboard: React.FC<MainKeyboardProps> = ({ calculatorStore }) => {\r\n    if (!calculatorStore) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={style()}>\r\n            <Button content=\"%\" onClick={calculatorStore.percent} />\r\n            <Button content=\"CE\" onClick={calculatorStore.cancel} />\r\n            <Button content=\"C\" onClick={calculatorStore.clear} />\r\n            <Button content=\"&#8634;\" onClick={calculatorStore.undo} />\r\n            <Button content=\"1/x\" onClick={calculatorStore.oneXth} />\r\n            <Button content=\"x(2)\" onClick={calculatorStore.power} />\r\n            <Button content=\"sqrt\" onClick={calculatorStore.square} />\r\n            <Button content=\"/\" onClick={calculatorStore.division} />\r\n            <Button content=\"7\" onClick={event => calculatorStore.concatenateNumber(event)} />\r\n            <Button content=\"8\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"9\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"X\" onClick={calculatorStore.multiplication} />\r\n            <Button content=\"4\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"5\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"6\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"-\" onClick={calculatorStore.subtraction}/>\r\n            <Button content=\"1\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"2\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"3\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\"+\" onClick={calculatorStore.addition} />\r\n            <Button content=\"+/-\" onClick={calculatorStore.invertNumber} />\r\n            <Button content=\"0\" onClick={event => calculatorStore.concatenateNumber(event)}/>\r\n            <Button content=\".\" onClick={calculatorStore.addComma} />\r\n            <Button content=\"=\" isEqual onClick={calculatorStore.equal} />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MainKeyboardConsumer = inject('calculatorStore')(observer(MainKeyboard));\r\n\r\nexport { MainKeyboardConsumer as MainKeyboard };","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { default as BemCssModules } from 'bem-css-modules';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { CalculatorStore } from '../../stores/CalculatorStore';\r\nimport { default as MemoryContainerStyles } from './MemoryContainer.module.scss';\r\n\r\n\r\ninterface MemoryContainerProps {\r\n    calculatorStore?: CalculatorStore;\r\n}\r\n\r\nconst style = BemCssModules(MemoryContainerStyles);\r\n\r\nconst MemoryContainer: React.FC<MemoryContainerProps> = ({calculatorStore}) => {\r\n    if (!calculatorStore) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={style()}>\r\n            <Button content=\"MC\" isMemeory onClick={calculatorStore.memoryClear}/>\r\n            <Button content=\"MR\" isMemeory onClick={calculatorStore.memoryRead}/>\r\n            <Button content=\"M+\" isMemeory onClick={calculatorStore.memoryAdd}/>\r\n            <Button content=\"M-\" isMemeory onClick={calculatorStore.memoryMinus}/>\r\n            <Button content=\"MS\" isMemeory onClick={calculatorStore.memorySet}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MemoryContainerConsumer = inject('calculatorStore')(observer(MemoryContainer));\r\n\r\nexport { MemoryContainerConsumer as MemoryContainer };\r\n","\r\ntype TSelectedFunction = (event?: React.MouseEvent, hasRepeatedValue?: boolean) => void;\r\n\r\nexport class CalculatorStore {\r\n    private memoryValue = 0;\r\n    private displayValue: string | null = \"0\";\r\n    private previousValue: number | null = null;\r\n    private selectedFunction: TSelectedFunction | null = null;\r\n    private isFunctionDone = false;\r\n    private repeatedValue = 0;\r\n    private wasEqualClicked = false;\r\n    private wasSpecialFunctionClicked = false;\r\n    private display!: HTMLDivElement;\r\n\r\n    public set displayElement(element: HTMLDivElement) {\r\n        this.display = element;\r\n    }\r\n\r\n\tpublic concatenateNumber = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n\t\tthis.displayValue =\r\n\t\t\tthis.displayValue === null ||\r\n\t\t\tthis.displayValue === \"0\" ||\r\n\t\t\tthis.wasSpecialFunctionClicked\r\n\t\t\t\t? (event.target as HTMLButtonElement).textContent\r\n\t\t\t\t: this.displayValue + (event.target as HTMLElement).textContent;\r\n\r\n\t\tif (this.wasEqualClicked) {\r\n\t\t\tthis.previousValue = null;\r\n\t\t\tthis.repeatedValue = 0;\r\n\t\t\tthis.wasEqualClicked = false;\r\n\t\t}\r\n\r\n        this.isFunctionDone = false;\r\n\t\tthis.wasSpecialFunctionClicked = false;\r\n\t\tthis.display.textContent = this.displayValue;\r\n\t}\r\n\r\n\tpublic memoryClear = (): void => {\r\n\t\tthis.wasSpecialFunctionClicked = true;\r\n\t\tthis.memoryValue = 0;\r\n\t}\r\n\r\n\tpublic memoryRead = (): void => {\r\n\t\tthis.wasSpecialFunctionClicked = true;\r\n\t\tthis.changeDisplayValue(this.memoryValue.toString());\r\n\t}\r\n\r\n\tpublic memoryAdd = (): void => {\r\n\t\tthis.wasSpecialFunctionClicked = true;\r\n\t\tthis.memoryValue = this.memoryValue + Number(this.displayValue);\r\n\t}\r\n\r\n\tpublic memoryMinus = (): void => {\r\n\t\tthis.wasSpecialFunctionClicked = true;\r\n\t\tthis.memoryValue = this.memoryValue - Number(this.displayValue);\r\n\t}\r\n\r\n\tpublic memorySet = (): void => {\r\n\t\tthis.wasSpecialFunctionClicked = true;\r\n\t\tthis.memoryValue = Number(this.displayValue);\r\n\t}\r\n\r\n\tpublic clear = (): void => {\r\n\t\tthis.previousValue = null;\r\n\t\tthis.selectedFunction = null;\r\n\t\tthis.changeDisplayValue(null);\r\n\t}\r\n\r\n\tpublic cancel = (): void => {\r\n\t\tthis.changeDisplayValue(null);\r\n\t}\r\n\r\n\tpublic addition = (event?: React.MouseEvent, hasRepeatedValue?: boolean): void => {\r\n\t\tthis.callPreviousFunctionAndChangeIt(this.addition, hasRepeatedValue);\r\n\r\n\t\tif (this.isFunctionDone) {\r\n\t\t\tthis.handleSecondClickOnFunction();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [displayValue, previousValue] = this.getValuesToCalculations(\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\t\tconst newValue = displayValue + Number(previousValue);\r\n\r\n            this.setRepeatedValue(newValue, hasRepeatedValue);\r\n\r\n\t\tthis.afterNewValueCalculation(newValue);\r\n\t}\r\n\r\n\tpublic subtraction = (event?: React.MouseEvent, hasRepeatedValue?: boolean): void =>  {\r\n\t\tthis.callPreviousFunctionAndChangeIt(\r\n\t\t\tthis.subtraction,\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\r\n\t\tif (this.isFunctionDone) {\r\n            this.handleSecondClickOnFunction();\r\n            \r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [displayValue, previousValue] = this.getValuesToCalculations(\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\t\tlet newValue;\r\n\r\n\t\tif (this.previousValue !== null) {\r\n\t\t\tnewValue = hasRepeatedValue\r\n\t\t\t\t? displayValue - this.repeatedValue\r\n\t\t\t\t: Number(previousValue) - displayValue;\r\n\r\n            this.setRepeatedValue(newValue, hasRepeatedValue)\r\n\t\t}\r\n\r\n\t\tthis.afterNewValueCalculation(newValue ? newValue : null);\r\n\t}\r\n\r\n\tpublic multiplication = (event?: React.MouseEvent, hasRepeatedValue?: boolean): void => {\r\n\t\tthis.callPreviousFunctionAndChangeIt(\r\n\t\t\tthis.multiplication,\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\r\n\t\tif (this.isFunctionDone) {\r\n\t\t\tthis.handleSecondClickOnFunction();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [displayValue, previousValue] = this.getValuesToCalculations(\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\t\tconst newValue = displayValue * Number(previousValue);\r\n\r\n        this.setRepeatedValue(newValue, hasRepeatedValue);\r\n\t\tthis.afterNewValueCalculation(newValue);\r\n\t}\r\n\r\n\tpublic division = (event?: React.MouseEvent, hasRepeatedValue?: boolean): void => {\r\n\t\tthis.callPreviousFunctionAndChangeIt(this.division, hasRepeatedValue);\r\n\r\n\t\tif (this.isFunctionDone) {\r\n\t\t\tthis.handleSecondClickOnFunction();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [displayValue, previousValue] = this.getValuesToCalculations(\r\n\t\t\thasRepeatedValue\r\n\t\t);\r\n\t\tconst newValue = hasRepeatedValue\r\n\t\t\t? displayValue / this.repeatedValue\r\n\t\t\t: previousValue === 0\r\n                ? displayValue\r\n\r\n                    : Number(previousValue) / displayValue;\r\n\r\n        this.setRepeatedValue(newValue, hasRepeatedValue);\r\n\t\tthis.afterNewValueCalculation(newValue);\r\n\t}\r\n\r\n\tpublic equal = (): void => {\r\n\t\tthis.isFunctionDone = false;\r\n\t\tif (!this.wasEqualClicked && this.selectedFunction) {\r\n\t\t\tthis.selectedFunction(undefined, false);\r\n\t\t} else if (this.selectedFunction) {\r\n\t\t\tthis.selectedFunction(undefined, true);\r\n\t\t}\r\n\r\n\t\tthis.wasEqualClicked = true;\r\n    }\r\n    \r\n\r\n\tpublic undo = (): void => {\r\n\t\tthis.changeDisplayValue(\r\n\t\t\tthis.displayValue ? this.displayValue.slice(0, -1) : null\r\n\t\t);\r\n\t}\r\n\r\n\tpublic invertNumber = (): void => {\r\n        const displayValue = Number(this.displayValue);\r\n        const valueToDisplay = displayValue\r\n\t\t\t\t? (-Math.abs(displayValue)).toString()\r\n                : (Math.abs(displayValue)).toString();\r\n                \r\n        this.changeDisplayValue(valueToDisplay);\r\n\t}\r\n\r\n\tpublic addComma = (): void => {\r\n\t\tif (!this.display.textContent?.includes(\".\")) {\r\n\t\t\tthis.changeDisplayValue(\r\n\t\t\t\t`${this.displayValue ? this.displayValue : \"0\"}.`\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n    \r\n    public percent = (): void => {\r\n\t\tthis.previousValue \r\n\t\t? this.callSpecialFunction(Number(this.previousValue) * Number(this.displayValue) / 100)\r\n\t\t: this.callSpecialFunction(Number(this.displayValue) / 100);\r\n    }\r\n\r\n    public square = (): void => {\r\n        this.callSpecialFunction(Math.sqrt(Number(this.displayValue)))\r\n    }\r\n\r\n    public power = (): void => {\r\n        this.callSpecialFunction(Number(this.displayValue) ** 2)\r\n    }\r\n\r\n    public oneXth = (): void => {\r\n        this.callSpecialFunction(1 / Number(this.displayValue))\r\n    }\r\n\r\n    private callSpecialFunction(value: number) {\r\n        this.wasEqualClicked = false;\r\n        this.wasSpecialFunctionClicked = true;\r\n        this.changeDisplayValue(value.toString());\r\n    }\r\n\r\n\tprivate callPreviousFunctionAndChangeIt(previousFunction: TSelectedFunction | null, hasRepeatedValue?: boolean) {\r\n\t\tif (\r\n\t\t\tthis.selectedFunction !== previousFunction &&\r\n\t\t\tthis.selectedFunction\r\n\t\t) {\r\n\t\t\tthis.selectedFunction(undefined, hasRepeatedValue);\r\n\t\t}\r\n\t\tthis.selectedFunction = previousFunction;\r\n\t}\r\n\r\n\tprivate handleSecondClickOnFunction(): void {\r\n\t\tthis.setRepeatedValue(this.previousValue, null);\r\n\t\tthis.displayValue = \"0\";\r\n\t\tthis.wasEqualClicked = false;\r\n\t}\r\n    \r\n    private afterNewValueCalculation(newValue: number | null): void {\r\n\t\tthis.isFunctionDone = true;\r\n\t\tthis.wasEqualClicked = false;\r\n\t\tthis.displayValue = null;\r\n\t\tthis.display.textContent =\r\n\t\t\tthis.previousValue !== null ? Number(newValue).toString() : this.display.textContent;\r\n\t\tthis.previousValue =\r\n\t\t\tthis.previousValue !== null ? newValue : Number(this.display.textContent);\r\n    }\r\n\r\n\tprivate setRepeatedValue(newValue: number | null, hasRepeatedValue?: boolean | null): void {\r\n        if (hasRepeatedValue === null ) {\r\n            this.repeatedValue = Number(newValue);\r\n\r\n            return;\r\n        }\r\n\r\n        this.repeatedValue = hasRepeatedValue \r\n        ? this.repeatedValue \r\n        : this.wasEqualClicked \r\n            ? Number(newValue) \r\n            : Number(this.display.textContent);\r\n\t}\r\n\r\n    private getValuesToCalculations(hasRepetedValue?: boolean): [number, (number | null)] {\r\n        const displayValue = Number(this.display.textContent);\r\n        const previousValue = hasRepetedValue ? this.repeatedValue : Number(this.previousValue);\r\n\r\n        return [displayValue, previousValue];\r\n    }\r\n\r\n\tprivate changeDisplayValue(value: string | null): void {\r\n\t\tconst isNoValue = value === null || value === \"\";\r\n\r\n\t\tthis.displayValue = isNoValue ? null : value;\r\n        this.display.textContent = isNoValue ? \"0\" : value;\r\n\t}\r\n}","import React from \"react\";\nimport { Provider } from 'mobx-react';\nimport { default as bemCssModules } from 'bem-css-modules';\nimport { Display } from \"./components/Display/Display\";\nimport { MainKeyboard } from \"./containers/MainKeyboard/MainKeyboard\";\nimport { MemoryContainer } from \"./containers/MemoryContainer/MemoryContainer\";\nimport { default as AppStyles } from \"./App.module.scss\";\nimport { getRootStores } from \"./stores/getRootStores\";\n\nbemCssModules.setSettings({\n  modifierDelimiter: '--'\n});\n\nconst style = bemCssModules(AppStyles);\n\nfunction App() {\n  return (\n    <Provider {...getRootStores()}>\n      <div className={style()}>\n        <Display />\n        <MemoryContainer />\n        <MainKeyboard />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { CalculatorStore } from \"./CalculatorStore\";\r\n\r\ninterface IRootStore {\r\n    calculatorStore: CalculatorStore; \r\n}\r\n\r\nexport const getRootStores = (): IRootStore => ({\r\n    calculatorStore: new CalculatorStore()\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}